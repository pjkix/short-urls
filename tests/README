Tests
=====


All tests should run all unit tests and functional tests

Acceptance Tests (functional tests)
-----------------------------------

you can run individual test suites or selenium test suites

Unit Tests (code tests)
----------

* ShortUrlTestSuite - tests code 

user stories
------------

* get a short url from a long one


Notes
-----
unit tests ... acceptance tests ... all tests

### run tests from cmd line

run tests from ./test/ dir for autoloading of phpunit.xml and tests as such

	$ phpunit --verbose

run individual test cases or suites from cmd line ... or zend ide 

	$ phpunit tests/ShortUrlTestSuite

or 
	$ phpunit tests/ShotrUrl

### run tests from browser ... 

either using selenium core or rc

#### using selenium core ... 

basically fire up browser go to selenium core and enter /short-urls/tests/AcceptanceTestSuite.html

http://localhost/~pjkix/selenium-core/core/TestRunner.html?test=%2F~pjkix%2Fprojects%2Fshort-urls%2Ftests%2FAcceptanceTestSuite.html&resultsUrl=..%2FpostResults

#### using selenium rc

fire up selenium server using ... 

	java -jar selenium-server.jar

better yet make an alias 

	alias selenium_rc='java -jar /Users/pjkix/Sites/lib/selenium-remote-control-1.0-beta-2/selenium-server-1.0-beta-2/selenium-server.jar'

once selenium server is running you can then kick off acceptance tests from the command line or from the browser suite

	http://localhost/~pjkix/projects/short-urls/tests/AllTests.php

### run tests from zend studio

right click > run as phpunit test

### run tests from ant

from project home folder for autoloading of build.xml

	$ ant phpunit

Continuous Integration
----------------------

ant + phpunit + selenium +  cruisecontrol + phpundercontrol = continuous integration zen :)

see configs in config/cc-phpuc*

### cruisecontrol
http://cruisecontrol.sourceforge.net/

setup  project in cruisecontorl

	$ phpuc project --version-control svn \
	--version-control-url http://svn.dev.pjkix.com/short-urls \
	--test-case ShortUrlTest \
	--test-file ShortUrlTest.php \
	--test-dir . \
	--project-name ShortUrl \
	/opt/local/cruisecontrol

start cruise control

	$ cd /opt/cruisecontrol
	$ ./cruisecontrol.sh


#### phpundercontrol
http://www.phpundercontrol.org/

	$ phpuc

##### php code sniffer
http://pear.php.net/package/PHP_CodeSniffer

	$ phpcs 

##### pmd (Programming Mistake Detector/Project Mess Detection)
http://pmd.sourceforge.net/

PMD scans Java source code and looks for potential problems like:

    * Possible bugs - empty try/catch/finally/switch statements
    * Dead code - unused local variables, parameters and private methods
    * Suboptimal code - wasteful String/StringBuffer usage
    * Overcomplicated expressions - unnecessary if statements, for loops that could be while loops
    * Duplicate code - copied/pasted code means copied/pasted bugs

you will see errors like this ... 

The CRAP index is 72. The Change Risk Analysis and Predictions (CRAP) index of a function or method uses cyclomatic complexity and code coverage from automated tests to help estimate the effort and risk associated with maintaining legacy code. A CRAP index over 30 is a good indicator of crappy code.

	$ sudo phpcs --config-set tab_width 4
	$ sudo phpcs --config-set default_standard Zend
	$ phpcs --report=summary --standard=/Users/pjkix/Sites/projects/short-urls/config/PHP/CodeSniffer/Standards/Kix/ lib/
	


### Xinc (Xinc Is Not CruiseControl)

pear channel-discover pear.xinc.eu
pear channel-discover components.ez.no
pear install xinc/Xinc



---

"dang internet, they dont care whos life they ruin" -koth

